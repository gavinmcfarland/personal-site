@import 'aliases';

:root {
    --spacing-base: 16px;
	--number-spacing-scale-factor: var(--number-major-third);

	@media (min-width: 900px) {
        --spacing-base: 24px;
		--number-spacing-scale-factor: var(--number-perfect-forth);
	}
}

:root {
	@for $i from 1 to 20 {
		--spacing-$(i): calc(var(--spacing-base) * pow(var(--number-spacing-scale-factor), $(i)));
		--margin-$(i): calc(var(--spacing-base) * pow(var(--number-spacing-scale-factor), $(i)));
		--padding-$(i): calc(var(--spacing-base) * pow(var(--number-spacing-scale-factor), $(i)));
	}

	--gap: var(--spacing-4)
}






h, h1, h2, h3, h4, h5, h6, p, blockquote, table, ul, ol, li, code, hr {
	margin-block: var(--margin-1);
}

h, h1, h2, h3, h4, h5, h6 {
	margin-top: var(--margin-4);
	margin-bottom: var(--margin-2);
}

h5 {
    margin-bottom: var(--margin-1); 
}

hr {
	margin-top: var(--margin-4);
}

div > code {
    margin-block: var(--margin-1);
}





/* Text crop */
/* Using this method
https://medium.com/codyhouse/line-height-crop-a-simple-css-formula-to-remove-top-space-from-your-text-9c3de06d7c6f
*/

blockquote, p, ul, ol, h1, h2, h3, h4, h5, h6, nav, div > code, div > a, .Button {

    /* display: table; */

    &::before,
    &::after {
        content: '';
        display: block;
        height: 0;
        width: 0;
    }

    &::before {
        margin-bottom: calc((0.75 - var(--line-height, 1)) * 0.5em);
    }

    &::after {
        margin-top: calc((0.75 - var(--line-height, 1)) * 0.5em);


        /* ^ Causing some issues with how the height is calculated. So for some reason you need to add display: table, but that may cause some issues elsewhere */
    }
}

